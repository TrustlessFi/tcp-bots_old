/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { VerifyLiquidityMathAddDelta } from "../VerifyLiquidityMathAddDelta";

export class VerifyLiquidityMathAddDelta__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifyLiquidityMathAddDelta> {
    return super.deploy(
      overrides || {}
    ) as Promise<VerifyLiquidityMathAddDelta>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VerifyLiquidityMathAddDelta {
    return super.attach(address) as VerifyLiquidityMathAddDelta;
  }
  connect(signer: Signer): VerifyLiquidityMathAddDelta__factory {
    return super.connect(signer) as VerifyLiquidityMathAddDelta__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyLiquidityMathAddDelta {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VerifyLiquidityMathAddDelta;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "y",
        type: "int128",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156100115760006000fd5b50610017565b61026f806100266000396000f3fe60806040523480156100115760006000fd5b50600436106100305760003560e01c8063b0ed8bec1461003657610030565b60006000fd5b6100826004803603604081101561004d5760006000fd5b8101908080356fffffffffffffffffffffffffffffffff1690602001909291908035600f0b9060200190929190505050610084565b005b600061009683836100d463ffffffff16565b6fffffffffffffffffffffffffffffffff1690508183016fffffffffffffffffffffffffffffffff1681141515156100ce5760006000fd5b505b5050565b6000600082600f0b121561018d57826fffffffffffffffffffffffffffffffff168260000384039150816fffffffffffffffffffffffffffffffff16101515610188576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f4c5300000000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b610232565b826fffffffffffffffffffffffffffffffff168284019150816fffffffffffffffffffffffffffffffff1610151515610231576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f4c4100000000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b5b9291505056fea26469706673582212204311da018b9ccf7547f70508d4bb1333259d1f54db2d85e9a4598ad8a0d57c1064736f6c63430007060033";
