/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { ITokenAllocationCreator } from "../ITokenAllocationCreator";

export class ITokenAllocationCreator__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITokenAllocationCreator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ITokenAllocationCreator;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "allocation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "allocatee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "allocationPurposeExplanation",
        type: "string",
      },
    ],
    name: "AllocationCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ITokenAllocation",
        name: "",
        type: "address",
      },
    ],
    name: "validAllocation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
