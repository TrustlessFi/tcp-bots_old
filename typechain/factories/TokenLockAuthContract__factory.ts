/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenLockAuthContract,
  TokenLockAuthContractInterface,
} from "../TokenLockAuthContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITokenIncentiveMinter",
        name: "_tokenMinter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_authenticator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_lastBlock",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "lastBlock",
        type: "uint64",
      },
    ],
    name: "BlockDeadlineSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TokensDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TokensExtracted",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "abdicateTokenExtraction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authenticator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canExtractTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newLastBlock",
        type: "uint40",
      },
    ],
    name: "extendDeadline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenLockAuthContract.Auth",
        name: "auth",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "retreiveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenMinter",
    outputs: [
      {
        internalType: "contract ITokenIncentiveMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002601c6101000a81548160ff0219169083151502179055503480156200002d5760006000fd5b50604051620014d5380380620014d583398181016040528101906200005391906200019f565b5b83600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f0293faaad142f246549a52cb1472ea1b4856fb3052b975eebb812166baf6947b600260149054906101000a900467ffffffffffffffff166040516200018791906200021a565b60405180910390a15b50505050620002535662000252565b600060006000600060808587031215620001b7578384fd5b8451620001c48162000235565b809450506020850151620001d88162000235565b809350506040850151620001ec8162000235565b8092505060608501516001600160401b038116811415156200020c578182fd5b809150505b92959194509250565b60006020820190506001600160401b03831682525b92915050565b6001600160a01b038116811415156200024e5760006000fd5b5b50565b5b61127280620002636000396000f3fe60806040523480156100115760006000fd5b50600436106100d95760003560e01c80637ea1098011610082578063adc879e91161005c578063adc879e9146101e7578063cfb3647b14610205578063d28003b814610223576100d9565b80637ea109801461018d578063806b984f146101ab578063a3f4df7e146101c9576100d9565b8063452a9320116100b3578063452a932014610123578063570c537e14610141578063667a50bf14610171576100d9565b8063083f5a97146100df57806314cc25e8146100e95780632335c76b14610105576100d9565b60006000fd5b6100e761023f565b005b61010360048036038101906100fe9190610da9565b6102f0565b005b61010d610533565b60405161011a9190610ef2565b60405180910390f35b61012b610559565b6040516101389190610ef2565b60405180910390f35b61015b60048036038101906101569190610da9565b61057f565b6040516101689190610f8c565b60405180910390f35b61018b60048036038101906101869190610e28565b610602565b005b6101956106af565b6040516101a29190610f78565b60405180910390f35b6101b36106c2565b6040516101c091906111a6565b60405180910390f35b6101d16106dc565b6040516101de9190610fc6565b60405180910390f35b6101ef610718565b6040516101fc9190611194565b60405180910390f35b61020d610721565b60405161021a9190610f9e565b60405180910390f35b61023d60048036038101906102389190610df4565b610747565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c89061101a565b60405180910390fd5b60006002601c6101000a81548160ff0219169083151502179055505b5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103799061101a565b60405180910390fd5b6002601c9054906101000a900460ff1615156103d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca90611059565b60405180910390fd5b600260149054906101000a900467ffffffffffffffff1667ffffffffffffffff1661040261098e63ffffffff16565b67ffffffffffffffff1611151561044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590611098565b60405180910390fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634cd7a31583836040518363ffffffff1660e01b81526004016104ab929190610f49565b600060405180830381600087803b1580156104c65760006000fd5b505af11580156104db573d600060003e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f8f8d27e529b41a5ef123b4ddba0b70b45def70658adf4c8e62952e02443a69f2826040516105259190611194565b60405180910390a25b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040518060400160405280601881526020017f546f6b656e204c6f636b204175746820436f6e747261637400000000000000008152602001506105c861071863ffffffff16565b3085856040516020016105df959493929190610e88565b6040516020818303038152906040528051906020012090506105fc565b92915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b9061101a565b60405180910390fd5b6106aa8164ffffffffff166109c363ffffffff16565b5b5b50565b6002601c9054906101000a900460ff1681565b600260149054906101000a900467ffffffffffffffff1681565b6040518060400160405280601881526020017f546f6b656e204c6f636b204175746820436f6e7472616374000000000000000081526020015081565b60004690505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900467ffffffffffffffff1667ffffffffffffffff1661077661098e63ffffffff16565b67ffffffffffffffff161015156107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611116565b60405180910390fd5b60006108156107e56107da338561057f63ffffffff16565b610b2663ffffffff16565b8460000160208101906107f89190610e5a565b856020013560001916866040013560001916610b8a63ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156108a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a090611155565b60405180910390fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634cd7a31533846040518363ffffffff1660e01b8152600401610906929190610f1a565b600060405180830381600087803b1580156109215760006000fd5b505af1158015610936573d600060003e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c836040516109809190611194565b60405180910390a2505b5050565b6000600043905067ffffffffffffffff67ffffffffffffffff16811015156109b65760006000fd5b809150506109c056505b90565b600260149054906101000a900467ffffffffffffffff1667ffffffffffffffff166109f261098e63ffffffff16565b67ffffffffffffffff16101515610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3590611116565b60405180910390fd5b8067ffffffffffffffff16600260149054906101000a900467ffffffffffffffff1667ffffffffffffffff16101515610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa3906110d7565b60405180910390fd5b80600260146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f0293faaad142f246549a52cb1472ea1b4856fb3052b975eebb812166baf6947b600260149054906101000a900467ffffffffffffffff16604051610b1a91906111a6565b60405180910390a15b50565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815260200150601c0182600019168152602001915050604051602081830303815290604052805190602001209050610b85565b919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c11151515610c0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111f96022913960400191505060405180910390fd5b601b8460ff161480610c1f5750601c8460ff16145b1515610c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061121b6022913960400191505060405180910390fd5b60006001868686866040516000815260200160405260405180856000191681526020018460ff16815260200183600019168152602001826000191681526020019450505050506020604051602081039080840390855afa158015610cdf573d600060003e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45434453413a20696e76616c6964207369676e6174757265000000000000000081526020015060200191505060405180910390fd5b80915050610d9d56505b949350505050566111f7565b6000600060408385031215610dbc578182fd5b823573ffffffffffffffffffffffffffffffffffffffff811681141515610de1578283fd5b80925050602083013590505b9250929050565b600060008284036080811215610e08578283fd5b6060811215610e15578283fd5b50829150606083013590505b9250929050565b600060208284031215610e39578081fd5b813564ffffffffff811681141515610e4f578182fd5b809150505b92915050565b600060208284031215610e6b578081fd5b813560ff811681141515610e7d578182fd5b809150505b92915050565b60008651610e9a818460208b016111c2565b80830190508681527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000808760601b166020830152808660601b16603483015250836048820152606881019150505b9695505050505050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b600060408201905073ffffffffffffffffffffffffffffffffffffffff841682528260208301525b9392505050565b600060408201905073ffffffffffffffffffffffffffffffffffffffff841682528260208301525b9392505050565b600060208201905082151582525b92915050565b60006020820190508282525b92915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b6000602082528251806020840152610fe58160408501602087016111c2565b60407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150505b92915050565b600060208252600e60208301527f4e6f7420417574686f72697a656400000000000000000000000000000000000060408301526060820190505b919050565b600060208252600c60208301527f43616e742065787472616374000000000000000000000000000000000000000060408301526060820190505b919050565b600060208252601360208301527f446561646c696e65206e6f74207061737365640000000000000000000000000060408301526060820190505b919050565b600060208252600b60208301527f4d75737420657874656e6400000000000000000000000000000000000000000060408301526060820190505b919050565b600060208252600f60208301527f446561646c696e6520706173736564000000000000000000000000000000000060408301526060820190505b919050565b600060208252600b60208301527f41757468206661696c656400000000000000000000000000000000000000000060408301526060820190505b919050565b60006020820190508282525b92915050565b600060208201905067ffffffffffffffff831682525b92915050565b60005b838110156111e15780820151818401525b6020810190506111c5565b838111156111f0576000848401525b505b505050565bfe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a26469706673582212204ccdea7bf26aaccfffc2137e25b5e6e3c0c16ffb462b366e49e58fc1797683b964736f6c63430007060033";

export class TokenLockAuthContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tokenMinter: string,
    _authenticator: string,
    _guardian: string,
    _lastBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLockAuthContract> {
    return super.deploy(
      _tokenMinter,
      _authenticator,
      _guardian,
      _lastBlock,
      overrides || {}
    ) as Promise<TokenLockAuthContract>;
  }
  getDeployTransaction(
    _tokenMinter: string,
    _authenticator: string,
    _guardian: string,
    _lastBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenMinter,
      _authenticator,
      _guardian,
      _lastBlock,
      overrides || {}
    );
  }
  attach(address: string): TokenLockAuthContract {
    return super.attach(address) as TokenLockAuthContract;
  }
  connect(signer: Signer): TokenLockAuthContract__factory {
    return super.connect(signer) as TokenLockAuthContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockAuthContractInterface {
    return new utils.Interface(_abi) as TokenLockAuthContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLockAuthContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenLockAuthContract;
  }
}
