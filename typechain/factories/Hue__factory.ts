/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Hue, HueInterface } from "../Hue";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paramName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ParameterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Stopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "burnReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "distributeReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "contract IGovernor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernor",
        name: "_governor",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "validUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600b6000509090553480156200001c5760006000fd5b505b6040518060400160405280600981526020017f48756520546f6b656e00000000000000000000000000000000000000000000008152602001506040518060400160405280600381526020017f48554500000000000000000000000000000000000000000000000000000000008152602001505b8160036000509080519060200190620000ac92919062000130565b508060046000509080519060200190620000c892919062000130565b506012600560006101000a81548160ff021916908360ff1602179055505b505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b620001f2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001685760008555620001b9565b82601f106200018357805160ff1916838001178555620001b9565b82800160010185558215620001b9579182015b82811115620001b8578251826000509090559160200191906001019062000196565b5b509050620001c89190620001cc565b5090565b620001d2565b80821115620001ee5760008181506000905550600101620001d2565b5090565b61243680620002026000396000f3fe60806040523480156100115760006000fd5b506004361061017c5760003560e01c8063449a52f8116100d957806395d89b411161008d578063c59fb1ab11610067578063c59fb1ab14610743578063d5f3948814610772578063dd62ed3e146107a65761017c565b806395d89b41146105f5578063a457c2d714610679578063a9059cbb146106de5761017c565b806375172a8b116100be57806375172a8b1461056857806375f12b211461058657806379cc6790146105a65761017c565b8063449a52f8146104c057806370a082311461050f5761017c565b806318160ddd1161013057806323b872dd1161011557806323b872dd146103b5578063313ce5671461043a578063395093511461045b5761017c565b806318160ddd1461035257806319ab453c146103705761017c565b80630c340a24116101615780630c340a241461026b578063113cf1ab1461029f57806316f9428f146103035761017c565b806306fdde0314610182578063095ea7b3146102065761017c565b60006000fd5b61018a61081f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101cb5780820151818401525b6020810190506101af565b50505050905090810190601f1680156101f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102536004803603604081101561021d5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b60405180821515815260200191505060405180910390f35b6102736108f8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102eb600480360360208110156102b65760006000fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061091e565b60405180821515815260200191505060405180910390f35b6103506004803603604081101561031a5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610943565b005b61035a610a58565b6040518082815260200191505060405180910390f35b6103b3600480360360208110156103875760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a6a565b005b610422600480360360608110156103cc5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e7c565b60405180821515815260200191505060405180910390f35b610442610f7b565b604051808260ff16815260200191505060405180910390f35b6104a8600480360360408110156104725760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f97565b60405180821515815260200191505060405180910390f35b61050d600480360360408110156104d75760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061106a565b005b610552600480360360208110156105265760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061117e565b6040518082815260200191505060405180910390f35b6105706111d2565b6040518082815260200191505060405180910390f35b61058e6111ed565b60405180821515815260200191505060405180910390f35b6105f3600480360360408110156105bd5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611200565b005b6105fd6112e2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561063e5780820151818401525b602081019050610622565b50505050905090810190601f16801561066b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c6600480360360408110156106905760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061138c565b60405180821515815260200191505060405180910390f35b61072b600480360360408110156106f55760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611479565b60405180821515815260200191505060405180910390f35b6107706004803603602081101561075a5760006000fd5b81019080803590602001909291905050506114a8565b005b61077a61157c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610809600480360360408110156107bd5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115a2565b6040518082815260200191505060405180910390f35b606060036000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ba5780601f1061088f576101008083540402835291602001916108ba565b820191906000526020600020905b81548152906001019060200180831161089d57829003601f168201915b505050505090506108c6565b90565b60006108e96108dc61163763ffffffff16565b848461164463ffffffff16565b600190506108f2565b92915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60005060205280600052604060002060009150909054906101000a900460ff1681565b61095161184b63ffffffff16565b610a33600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166385aa61036040518163ffffffff1660e01b815260040160206040518083038186803b1580156109bd5760006000fd5b505afa1580156109d2573d600060003e3d6000fd5b505050506040513d60208110156109e95760006000fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118a663ffffffff16565b610a4430838361192263ffffffff16565b5b610a53611c0e63ffffffff16565b5b5050565b60006002600050549050610a67565b90565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ac75760006000fd5b600660159054906101000a900460ff16151515610ae45760006000fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639624e83e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b8e5760006000fd5b505afa158015610ba3573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906121de565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323741746040518163ffffffff1660e01b815260040160206040518083038186803b158015610c705760006000fd5b505afa158015610c85573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca99190612205565b600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d478b0876040518163ffffffff1660e01b815260040160206040518083038186803b158015610d525760006000fd5b505afa158015610d67573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b919061222c565b600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd9611c1e63ffffffff16565b600660149054906101000a900460ff161515610e1957600660006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610e35565b6001600660156101000a81548160ff0219169083151502179055505b8073ffffffffffffffffffffffffffffffffffffffff167f908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e660405160405180910390a25b50565b6000610e8f84848461192263ffffffff16565b610f6b84610ea161163763ffffffff16565b610f608560405180606001604052806028815260200161234a60289139600160005060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000610f1361163763ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611c219092919063ffffffff16565b61164463ffffffff16565b60019050610f74565b9392505050565b6000600560009054906101000a900460ff169050610f94565b90565b600061105b610faa61163763ffffffff16565b846110508560016000506000610fc461163763ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611ce390919063ffffffff16565b61164463ffffffff16565b60019050611064565b92915050565b61107861184b63ffffffff16565b61115a600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380f556056040518163ffffffff1660e01b815260040160206040518083038186803b1580156110e45760006000fd5b505afa1580156110f9573d600060003e3d6000fd5b505050506040513d60208110156111105760006000fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118a663ffffffff16565b61116a8282611d7763ffffffff16565b5b611179611c0e63ffffffff16565b5b5050565b6000600060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505490506111cd565b919050565b60006111e33061117e63ffffffff16565b90506111ea565b90565b600560159054906101000a900460ff1681565b61120e61184b63ffffffff16565b600061122083336115a263ffffffff16565b905081811015151561129d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4275726e206578636565647320616c6c6f77616e63650000000000000000000081526020015060200191505060405180910390fd5b6112bd836112af61163763ffffffff16565b84840361164463ffffffff16565b6112cd8383611f6263ffffffff16565b505b6112dd611c0e63ffffffff16565b5b5050565b606060046000508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137d5780601f106113525761010080835404028352916020019161137d565b820191906000526020600020905b81548152906001019060200180831161136057829003601f168201915b50505050509050611389565b90565b600061146a61139f61163763ffffffff16565b8461145f856040518060600160405280602581526020016123dc60259139600160005060006113d261163763ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611c219092919063ffffffff16565b61164463ffffffff16565b60019050611473565b92915050565b600061149961148c61163763ffffffff16565b848461192263ffffffff16565b600190506114a2565b92915050565b6114b661184b63ffffffff16565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663734875a8336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156115405760006000fd5b505afa158015611555573d600060003e3d6000fd5b505050506115693082611f6263ffffffff16565b5b611578611c0e63ffffffff16565b5b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050611631565b92915050565b6000339050611641565b90565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156116cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806123b86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611754576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123026022913960400191505060405180910390fd5b80600160005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b505050565b6002600b6000505414151515611896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188d90612253565b60405180910390fd5b6002600b6000508190909055505b565b80151561191e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806123936025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611a32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806122bd6023913960400191505060405180910390fd5b611a4383838361214763ffffffff16565b611ab58160405180606001604052806026815260200161232460269139600060005060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611c219092919063ffffffff16565b600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819090905550611b5881600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611ce390919063ffffffff16565b600060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b505050565b6001600b6000508190909055505b565b5b565b60008383111582901515611cd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c965780820151818401525b602081019050611c7a565b50505050905090810190601f168015611cc35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508284039050611cdc565b9392505050565b600060008284019050838110151515611d67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081526020015060200191505060405180910390fd5b80915050611d7156505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081526020015060200191505060405180910390fd5b611e316000838361214763ffffffff16565b611e4981600260005054611ce390919063ffffffff16565b6002600050819090905550611eac81600060005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611ce390919063ffffffff16565b600060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611fea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123726021913960400191505060405180910390fd5b611ffc8260008361214763ffffffff16565b61206e816040518060600160405280602281526020016122e060229139600060005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054611c219092919063ffffffff16565b600060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190909055506120d18160026000505461214d90919063ffffffff16565b6002600050819090905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b5050565b5b505050565b60008282111515156121ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081526020015060200191505060405180910390fd5b81830390506121d4565b92915050566122bb565b6000602082840312156121ef578081fd5b81516121fa81612292565b809150505b92915050565b600060208284031215612216578081fd5b815161222181612292565b809150505b92915050565b60006020828403121561223d578081fd5b815161224881612292565b809150505b92915050565b600060208252600d60208301527f4c43205265656e7472616e63790000000000000000000000000000000000000060408301526060820190505b919050565b73ffffffffffffffffffffffffffffffffffffffff8116811415156122b75760006000fd5b5b50565bfe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220fcf85ee1f235e6de2d4543c7dab3009df583257efe6c6d3bfe58ed9bda7d35d764736f6c63430007060033";

export class Hue__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Hue> {
    return super.deploy(overrides || {}) as Promise<Hue>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Hue {
    return super.attach(address) as Hue;
  }
  connect(signer: Signer): Hue__factory {
    return super.connect(signer) as Hue__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HueInterface {
    return new utils.Interface(_abi) as HueInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hue {
    return new Contract(address, _abi, signerOrProvider) as Hue;
  }
}
